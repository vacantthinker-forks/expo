apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'de.undercouch.download'

buildscript {
  // Simple helper that allows the root project to override versions declared by this library.
  ext.safeExtGet = { prop, fallback ->
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
  }

  repositories {
    // If you have maven { url "https://jitpack.io" } as your resolving url,
    // then Jitpack will only return the POM for the Android dependency causing the Gradle sync to fail.
    // However, when you change url to "https://www.jitpack.io", Jitpack returns POM, AAR, and sources.jar.
    // That is why we were adding www even though jitpacks docs don't say so.
    // See https://github.com/jitpack/jitpack.io/issues/4002.
    maven { url "https://www.jitpack.io" }
    mavenCentral()
    google()
    jcenter()
  }
  dependencies {
    classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.1'
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${safeExtGet('kotlinVersion', '1.4.21')}")
  }
}

repositories {
  maven { url "https://www.jitpack.io" }
  mavenCentral()
}

android {
  compileSdkVersion safeExtGet("compileSdkVersion", 30)

  compileOptions {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
  }

  defaultConfig {
    minSdkVersion safeExtGet("minSdkVersion", 21)
    targetSdkVersion safeExtGet("targetSdkVersion", 30)
    versionCode 1
    versionName "1.0"

    missingDimensionStrategy('versioning', 'versioned')

    ndk {
      moduleName("reanimated")
    }
    buildConfigField("boolean", "IS_INTERNAL_BUILD", "false")
    buildConfigField("int", "EXOPACKAGE_FLAGS", "0")
  }


  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
  }

  kotlinOptions {
    jvmTarget = '1.8'
  }
}


dependencies {
  api fileTree(dir: 'libs', include: ['*.jar'])
  api 'androidx.multidex:multidex:2.0.0'
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

  testImplementation 'junit:junit:4.12'


  api("com.facebook.fbjni:fbjni-java-only:0.0.3")


  implementation project(":expoview")

  // WHEN_DISTRIBUTING_REMOVE_TO_HERE

  // React native dependencies
  api 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
  api 'com.facebook.fresco:fresco:2.0.0'
  api 'com.facebook.fresco:animated-gif:2.0.0'
  api 'com.facebook.fresco:animated-webp:2.0.0'
  api 'com.facebook.fresco:webpsupport:2.0.0'
  api 'com.facebook.fresco:imagepipeline-okhttp3:2.0.0'
  api 'com.facebook.stetho:stetho:1.3.1' // do we need this?
  api 'com.facebook.stetho:stetho-okhttp3:1.3.1' // do we need this?
  compileOnly 'com.facebook.soloader:soloader:0.8.2'
  api 'com.google.code.findbugs:jsr305:3.0.2'
  api 'com.squareup.okhttp3:okhttp:3.12.1'
  api 'com.squareup.okhttp3:okhttp-urlconnection:3.12.1'
  api 'com.squareup.okio:okio:1.15.0'
  api 'com.facebook.infer.annotation:infer-annotation:0.11.2'
  api 'javax.inject:javax.inject:1'

  // Our dependencies
  api "androidx.appcompat:appcompat:1.2.0"
  compileOnly 'org.glassfish:javax.annotation:3.1.1'
  api 'de.greenrobot:eventbus:2.4.0'
  api "androidx.room:room-runtime:2.1.0"

  api 'com.squareup.picasso:picasso:2.5.2'
  api 'com.google.android.gms:play-services-analytics:17.0.0'
  api 'com.google.android.gms:play-services-maps:17.0.0'
  api 'com.google.android.gms:play-services-auth:17.0.0'
  api 'com.google.android.gms:play-services-location:17.0.0'
  api 'com.google.android.gms:play-services-fitness:17.0.0'
  api 'com.google.android.gms:play-services-wallet:17.0.0' //may need 10.+
  debugApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta1'
  // debugApi 'com.squareup.leakcanary:leakcanary-android:1.4-beta1'
  releaseApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta1'
  api 'commons-io:commons-io:2.6'
  api 'me.leolin:ShortcutBadger:1.1.4@aar'
  api 'com.theartofdev.edmodo:android-image-cropper:2.7.0'
  api 'commons-codec:commons-codec:1.10'
  api 'net.openid:appauth:0.7.1'
  api 'com.airbnb.android:lottie:3.4.0'
  compileOnly 'io.branch.sdk.android:library:4.1.0'
  api "androidx.exifinterface:exifinterface:1.0.0"
  api "androidx.legacy:legacy-support-v4:1.0.0"
  api "androidx.browser:browser:1.0.0"

  // react-native-screens
  api 'androidx.fragment:fragment:1.2.2'
  api 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
  api 'com.google.android.material:material:1.1.0'

  api 'com.google.firebase:firebase-core:17.2.3'
  api 'com.google.firebase:firebase-messaging:20.2.4'
  api 'com.google.maps.android:android-maps-utils:0.5'
  api 'com.jakewharton:butterknife:10.2.1'
  annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
  // Remember to update DetachAppTemplate build.gradle if you add any excludes or transitive = false here!

  // Used only in Expo Go, see Analytics.java
  compileOnly 'com.amplitude:android-sdk:2.23.2'

  // expo-file-system
  api 'com.squareup.okhttp3:okhttp:3.10.0'
  api 'com.squareup.okhttp3:okhttp-urlconnection:3.10.0'

  // expo-av
  // See explanation in expo-av/build.gradle
  api 'com.google.android.exoplayer:extension-okhttp:2.9.2'

  // expo-application
  api 'com.android.installreferrer:installreferrer:1.0'

  //dbflow
  annotationProcessor "com.github.agrosner.DBFlow:dbflow-processor:${safeExtGet('dbFlowVersion', '4.2.4')}"
  api "com.github.agrosner.DBFlow:dbflow-core:${safeExtGet('dbFlowVersion', '4.2.4')}"
  api "com.github.agrosner.DBFlow:dbflow:${safeExtGet('dbFlowVersion', '4.2.4')}"

  implementation 'com.cronutils:cron-utils:4.1.3'

  // @react-native-community/viewpager
  api 'com.github.troZee:ViewPager2:v1.0.6'

  // expo-payments-stripe
  implementation 'com.stripe:stripe-android:16.10.0'
}
