apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'

group = 'host.exp.exponent'
version = '4.2.0'

import groovy.json.JsonSlurper

def getNpmVersion() {
  def packageJsonFile = file('../package.json')
  def packageJson = new JsonSlurper().parseText(packageJsonFile.text)
  // In expo-branch we want to return version of the react-native-branch
  // not the package version as they don't necessarily match.
  // return packageJson.version
  return packageJson.dependencies["react-native-branch"]
}

buildscript {
  // Simple helper that allows the root project to override versions declared by this library.
  ext.safeExtGet = { prop, fallback ->
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
  }

  repositories {
    mavenCentral()
  }

  dependencies {
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${safeExtGet('kotlinVersion', '1.4.21')}")
  }
}

// Upload android library to maven with javadoc and android sources
configurations {
  deployerJars
}

// Creating sources with comments
task androidSourcesJar(type: Jar) {
  classifier = 'sources'
  from android.sourceSets.main.java.srcDirs
}

// Put the androidSources and javadoc to the artifacts
artifacts {
  archives androidSourcesJar
}

uploadArchives {
  repositories {
    mavenDeployer {
      configuration = configurations.deployerJars
      repository(url: mavenLocal().url)
    }
  }
}

android {
  compileSdkVersion safeExtGet("compileSdkVersion", 30)

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  defaultConfig {
    minSdkVersion safeExtGet("minSdkVersion", 21)
    targetSdkVersion safeExtGet("targetSdkVersion", 30)
    versionCode 12
    versionName '4.2.0'

    buildConfigField("String", "RNBRANCH_VERSION", "\"${getNpmVersion()}\"")
  }
  lintOptions {
    abortOnError false
  }
}

if (new File(rootProject.projectDir.parentFile, 'package.json').exists()) {
  apply from: project(":unimodules-core").file("../unimodules-core.gradle")
} else {
  throw new GradleException(
      '\'unimodules-core.gradle\' was not found in the usual React Native dependency location. ' +
          'This package can only be used in such projects. Are you sure you\'ve installed the dependencies properly?')
}

dependencies {
  unimodule 'unimodules-core'
  //noinspection GradleDynamicVersion
  implementation 'com.facebook.react:react-native:+'
  api 'io.branch.sdk.android:library:5.0.3'
  implementation "androidx.localbroadcastmanager:localbroadcastmanager:1.0.0"

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${safeExtGet('kotlinVersion', '1.4.21')}"
}
